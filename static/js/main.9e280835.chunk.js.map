{"version":3,"sources":["Weather.js","container.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","useState","search","setSearch","current","setCurrent","setHourly","setDaily","data","setData","setDayOfWeek","dayNum","Array","days","d","Date","getDay","settimes","timeNum","hour","date","hours","getHours","am_pm","nexthourampm","ampm","nexthour","nextampm","i","useEffect","a","API_KEY","exclude","latlonuri","fetch","latlonres","json","latlondata","length","latitude","longitude","name","uri","weatherres","console","log","daily","hourly","fetchApi","newS","dayN","className","id","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","style","color","temp","map","x","key","width","src","weather","icon","main","slice","y","day","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e280835.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./Style.css\";\r\n// import HorizontalScroll from 'react-scroll-horizontal'\r\n\r\nfunction Weather() {\r\n  const [search, setSearch] = useState('Solapur');\r\n  const [current, setCurrent] = useState(null);\r\n  \r\n  const [city, setCity] = useState('');\r\n  const [hourly, setHourly] = useState(null);\r\n  const [daily, setDaily] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  // Weekly day function\r\n  let setDayOfWeek = function (dayNum) {\r\n    var weekday = new Array(7);\r\n\r\n    var days = [\r\n      'SUN',\r\n      'MON',\r\n      'TUE',\r\n      'WED',\r\n      'THU',\r\n      'FRI',\r\n      'SAT',\r\n    ];\r\n    var d = new Date();\r\n    var dayName = days[d.getDay()];\r\n    var s = (d.getDay() + 1 + dayNum) % 7;\r\n    return days[s];\r\n  };\r\n  // console.log(setDayOfWeek());\r\n\r\n  // timeing function\r\n  let settimes = function (timeNum) {\r\n    var hour = new Array(47);\r\n    var date = new Date();\r\n    var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\r\n    var am_pm = date.getHours() >= 12 ? 'pm' : 'am';\r\n    // time conversion function am pm\r\n    function nexthourampm(hour, ampm) {\r\n      let nexthour, nextampm;\r\n      if (hour === 11) {\r\n        nexthour = 12;\r\n        if (ampm === 'am') {\r\n          nextampm = 'pm';\r\n        } else {\r\n          nextampm = 'am';\r\n        }\r\n      } else if (hour === 12) {\r\n        nexthour = 1;\r\n        if (ampm === 'am') {\r\n          nextampm = 'am';\r\n        } else {\r\n          nextampm = 'pm';\r\n        }\r\n      } else {\r\n        nexthour = hour + 1;\r\n        nextampm = ampm;\r\n      }\r\n      return [nexthour, nextampm];\r\n    }\r\n\r\n    hour[0] = nexthourampm(hours, am_pm);\r\n    for (let i = 1; i < 48; i++) {\r\n      hour[i] = nexthourampm(hour[i - 1][0], hour[i - 1][1]);\r\n    }\r\n    return hour[timeNum];\r\n  };\r\n\r\n  // light mode dark mode function\r\n\r\n  // fetching data using api\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const API_KEY = 'd6a2451b8470d2907cad790ebb180242';\r\n      //   const current = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=b0e89df602025b1b2525a9bd5f0c21d8`;\r\n      //   const hourly = `http://pro.openweathermap.org/data/2.5/forecast/hourly?q=${search}&appid=b0e89df602025b1b2525a9bd5f0c21d8`;\r\n      const exclude = 'minutely,alerts';\r\n      const latlonuri = `http://api.positionstack.com/v1/forward?access_key=fab80d93ef21989e45e301fbf8f51ca2&query=${search}`;\r\n      const latlonres = await fetch(latlonuri);\r\n      const latlondata = await latlonres.json();\r\n      // console.log(latlondata);\r\n\r\n      if ( latlondata?.data && latlondata.data.length>0 ) {\r\n\r\n        const { latitude=0, longitude=0, name=\"no data\" } = latlondata?.data[0];\r\n       \r\n\r\n        const uri = `https://api.openweathermap.org/data/2.5/onecall?units=metric&lat=${latitude}&lon=${longitude}&exclude=${exclude}&appid=${API_KEY}`;\r\n        const weatherres = await fetch(uri);\r\n        const data = await weatherres.json();\r\n        console.log(data);\r\n        setData(data);\r\n        const { daily, hourly, current } = data;\r\n        setCurrent(data.current);\r\n        // console.log(data.current);\r\n        // console.log(data.hourly);\r\n        setHourly(data.hourly);\r\n        setDaily(data.daily);\r\n        // console.log(data.daily);\r\n      \r\n      }\r\n\r\n    else{  setData(false);}\r\n    };\r\n    fetchApi();\r\n  }, [search]);\r\n\r\n  var days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n  var d = new Date();\r\n  var dayN = d.getDay();\r\n  var newS;\r\n\r\n  const handleS=(e)=>{\r\n    e.preventDefault();\r\n    if(newS){\r\n    setSearch(newS);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <main>\r\n\r\n\r\n      <div className=\"main\">\r\n        {/* <pre>{JSON.stringify(data.current, null, 4)}</pre> */}\r\n        \r\n        <header>Weather Forecast</header>\r\n        <div className=\"box\" id=\"box\">\r\n          {/* dark mode button,,8iuiiu */}\r\n         \r\n       \r\n         <div className=\"input_search\">\r\n          {/*input of city*/}\r\n          <div className=\"input\">\r\n         \r\n          <form onSubmit={handleS}>\r\n          <div className=\"icon\">\r\n               <i className=\"fas fa-search\"></i>\r\n             </div>\r\n             {/* <i className=\"fas fa-search\"></i> */}\r\n              <input\r\n                type=\"Search\"\r\n               \r\n                placeholder=\"Enter name of city\"\r\n                onChange={ (e)=>{newS=e.target.value;}}\r\n              />\r\n              <button className=\"btn\">Search</button>\r\n              </form>\r\n              \r\n            </div>\r\n            \r\n           \r\n          </div>\r\n         \r\n       \r\n    \r\n        \r\n\r\n          {!data ? (\r\n            <div className=\"p\">\r\n              <h1>NO DATA FOUND</h1>\r\n              \r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div className=\"nextpage\" style={{color:\"white\"}}>\r\n                <div className=\"info\">\r\n                <h1 className=\"Location\">\r\n                    <i className=\"fas fa-street-view\" style={{color:\"black\"}}></i>\r\n                    {search}\r\n                  </h1>\r\n                  <br/>\r\n                  <br/>\r\n                  <h1 className=\"h\">{days[dayN]}</h1>\r\n        \r\n                  <h2 className=\"temp\">{current?.temp}Â°C</h2>\r\n\r\n\r\n                </div>\r\n              </div>\r\n    \r\n              {/* <h3 className=\"InfoName\">INFORMATION</h3> */}\r\n              {/* <Scrollbar style={{width:\"10px\",height:\"3px\"}}> */}\r\n              <div className=\"hourly\" >\r\n                <h3>HOURLY FORECAST</h3>\r\n                \r\n                <ol>\r\n                  {data.hourly.map((x, key) => (\r\n                    <div className=\"card\">\r\n                      {settimes(key)}\r\n                    \r\n                      \r\n                     <img width=\"50\"src={`http://openweathermap.org/img/wn/${x.weather[0].icon}@4x.png`}/>\r\n                      <br />\r\n                      <h5>{x.weather[0].main}</h5>\r\n                      {x.temp}Â°<span className=\"celcius\">C</span>\r\n                    </div>\r\n                  ))}\r\n                </ol>\r\n     \r\n              </div>\r\n              {/* </Scrollbar> */}\r\n          \r\n              <div className=\"daily\">\r\n                <h3>DAILY FORECAST</h3>\r\n\r\n                <ol>\r\n                  {data.daily.slice(1).map((y, key) => (\r\n                    <div className=\"card\">\r\n                      {setDayOfWeek(key)}<br/>\r\n                      <img width=\"50\"src={`http://openweathermap.org/img/wn/${y.weather[0].icon}@4x.png`}/>\r\n                      <br/>\r\n                      <h5>{y.weather[0].main}</h5>\r\n                      {y.temp.day}Â°<span className=\"celcius\">C</span>\r\n\r\n                    </div>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './container.css';\r\nimport Weather from './Weather';\r\nexport default function Container() {\r\n  \r\n  return (\r\n    <div className=\"main\">\r\n     \r\n      <Weather />\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport Container from './container';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"appmain\">\n      \n       <div className=\"cloud\"></div>\n       \n      <Container />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}